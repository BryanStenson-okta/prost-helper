var searchIndex = JSON.parse('{\
"prost_build_config":{"doc":"A prost toolkit to build protobuf with extra …","t":[3,3,3,12,11,11,11,11,11,11,12,11,12,11,11,12,11,11,12,12,12,12,11,11,11,11,11,11,12,12,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11],"n":["BuildConfig","BuildOption","Builder","attrs","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","btree_maps","build_protos","bytes","default","default","description","deserialize","deserialize","enums","fields","files","files","fmt","fmt","from","from","from","from","includes","includes","into","into","into","messages","output","paths","serialize","serialize","service_generator","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id"],"q":["prost_build_config","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","extra attributes to put on generated data structure, for …","","","","","","","build options for BTreeMap","build protobuf with configuration","build options for bytes","","","description of the option","","","build options for enums","build options for fields","protobuf files","protobuf files","","","","","","","protobuf include dirs","protobuf include dirs","","","","build options for messages","dir for generated code, defaults to Cargo OUT_DIR, else …","a list of paths you want to add the attribute","","","Configures the code generator for service generator","","","","","","","","",""],"i":[0,0,0,1,2,3,1,2,3,1,3,2,3,3,1,1,3,1,3,3,2,3,3,1,2,2,3,1,2,3,2,3,1,3,3,1,3,1,2,2,3,1,2,3,1,2,3,1],"f":[null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],null,[[]],null,[[],["buildconfig",3]],[[],["buildoption",3]],null,[[],["result",4]],[[],["result",4]],null,null,null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["buildconfig",3]]],[[]],[[]],[[]],null,null,[[]],[[]],[[]],null,null,null,[[],["result",4]],[[],["result",4]],[[["box",3,[["servicegenerator",8]]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]]],"p":[[3,"BuildOption"],[3,"Builder"],[3,"BuildConfig"]]},\
"prost_helper":{"doc":"A set of prost helper functions to make prost generated …","t":[8,14,5,5,5,5,5,5,0,14,14,14,5,5,10,14],"n":["ToJson","bytes_try_into_prost","deserialize_buf_bytes","deserialize_buf_vec","deserialize_null_default","deserialize_repeat_buf_bytes","deserialize_repeat_buf_vec","is_zero","macros","prost_into_bytes","prost_into_vec","prost_to_json","serialize_buf","serialize_repeat_buf","to_json","vec_try_into_prost"],"q":["prost_helper","","","","","","","","","","","","","","",""],"d":["Convert the prost message to JSON string for debugging …","","","","customized deserialize function to use default for JSON …","","","customized skip_serializing_if function to skip 0 for …","","","Generate <code>From</code> and <code>Into</code> for your prost message.","","","","","Generate <code>TryFrom</code> and <code>TryInto</code> for your prost message from …"],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0],"f":[null,null,[[],["result",4,[["bytes",3]]]],[[],["result",4,[["vec",3,[["u8",15]]]]]],[[],["result",4]],[[],["result",4,[["vec",3,[["bytes",3]]]]]],[[],["result",4,[["vec",3,[["vec",3,[["u8",15]]]]]]]],[[],["bool",15]],null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["string",3]],null],"p":[[8,"ToJson"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};